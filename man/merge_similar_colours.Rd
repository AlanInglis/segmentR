% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_similar_colours.R
\name{merge_similar_colours}
\alias{merge_similar_colours}
\title{merge_similar_colours}
\usage{
merge_similar_colours(pal_df, deltaE = 5, space = "lab")
}
\arguments{
\item{pal_df}{A data frame with \strong{at least} two columns
\emph{\code{hex}} – valid hexadecimal colour strings
\emph{\code{freq}} – integer pixel counts or weights.}

\item{deltaE}{Numeric ≥ 0. The maximum CIEDE2000 distance for two colours
to be considered the same. Values between 2 and 6 are common; default 5.}

\item{space}{Character. Colour space supplied to \strong{farver} for the
distance calculation (default \code{"lab"}).  Any space recognised by
\code{farver::decode_colour()} is valid.}
}
\value{
A data frame with columns
\emph{\code{group}} – cluster label
\emph{\code{avg_color}} – representative hex colour per group
\emph{\code{freq}} – total pixel count per group,
sorted by descending \code{freq}.
}
\description{
Given a data frame of hex colours and their pixel \strong{frequency} counts
(such as the output of \code{\link[=img_to_palette]{img_to_palette()}} or \code{\link[=get_top_col]{get_top_col()}}),
this function computes the pair-wise perceptual distances
(CIEDE2000) between all colours in the specified colour space
(Lab by default).
Single-linkage hierarchical clustering is then applied and the tree is cut
at height \code{deltaE}.
All colours that fall within the same cluster are merged; their
representative colour is the mean hex value returned by
\code{\link[=avg_hex]{avg_hex()}}, and their frequencies are summed.
}
\details{
Collapse perceptually similar colours in an extracted palette.

\emph{Perceptual} merging avoids the arbitrary choice of \emph{k} required by
k-means approaches and is deterministic (no random seeds).
}
\examples{
\dontrun{
img  <- read_image("path/to/image.png")
pal  <- img_to_palette(img, k = 20)          # initial 20-colour palette
pal2 <- merge_similar_colours(pal, deltaE = 4)
print(pal2)
plot_palette(pal2$avg_color, pal2$freq)      # quick visual check
}

}
\seealso{
\code{\link[=img_to_palette]{img_to_palette()}}, \code{\link[=get_top_col]{get_top_col()}}, \code{\link[=avg_hex]{avg_hex()}}
}
